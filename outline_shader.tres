[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;
// based on a free shader from GD Quest
uniform vec4 text_color : hint_color = vec4(1, 1, 1, 1);
uniform vec4 line_color : hint_color = vec4(0, 0, 0, 1);
uniform float line_thickness : hint_range(0, 10) = 2.0;
// Samples 12 offsets in a radial pattern
const vec2 rot1 = vec2(0.8660254037844386, 0.5);
const vec2 rot2 = vec2(0.8660254037844386, -0.5);

void fragment() {
	vec2 size = TEXTURE_PIXEL_SIZE * line_thickness;
	
	float outline = texture(TEXTURE, UV).a;
	COLOR = mix(
		line_color,
		text_color,
		outline
	);
	
	outline += texture(TEXTURE, UV + vec2(-size.x,       0)).a;
	outline += texture(TEXTURE, UV + vec2(+size.x,       0)).a;
	outline += texture(TEXTURE, UV + vec2(      0, -size.y)).a;
	outline += texture(TEXTURE, UV + vec2(      0, +size.y)).a;
	outline += texture(TEXTURE, UV + size *  rot1.xy).a;
	outline += texture(TEXTURE, UV + size *  rot1.yx).a;
	outline += texture(TEXTURE, UV + size * -rot1.xy).a;
	outline += texture(TEXTURE, UV + size * -rot1.yx).a;
	outline += texture(TEXTURE, UV + size *  rot2.xy).a;
	outline += texture(TEXTURE, UV + size *  rot2.yx).a;
	outline += texture(TEXTURE, UV + size * -rot2.xy).a;
	outline += texture(TEXTURE, UV + size * -rot2.yx).a;
	outline = mix(outline, 1.0, step(1, outline)); // workaround for min() missing in GLES2
	
	COLOR.a = outline;
}"
